apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "mlflow.name" . }}
    helm.sh/chart: {{ include "mlflow.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.maxSurge }}
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mlflow.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mlflow.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
          args:
          - "--port={{ .Values.port }}"
          - "--default-artifact-root={{ .Values.default_artifact_root }}"
          env:
          - name: DB_USER
            value: "{{ .Values.dbUser }}"
          - name: DB_PASSWORD_FILE
            value: /secret/dbPassword
          - name: DB_HOST
            value: "{{ .Values.dbHost }}"
          - name: DB_PORT
            value: "{{ .Values.dbPort }}"
          - name: DB_DATABASE
            value: "{{ .Values.dbDatabase }}"
{{- if .Values.s3.endpoint }}
          - name: MLFLOW_S3_ENDPOINT_URL
            value: {{ .Values.s3.endpoint }}
{{- end }}
{{- if .Values.env }}
{{ toYaml .Values.env | indent 10 }}
{{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: "/secret"
            name: secret
{{- if .Values.volumes }}
{{ toYaml .Values.volumeMounts | indent 10 }}
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
{{- end }}
      volumes:
      - name: secret
        secret:
          secretName: {{ include "mlflow.fullname" . }}
          defaultMode: 0400
{{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 6 }}
{{- end }}
